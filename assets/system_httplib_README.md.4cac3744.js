import{_ as s,c as a,o as n,a as l}from"./app.28778c7e.js";const A=JSON.parse(`{"title":"cpp-httplib","description":"","frontmatter":{},"headers":[{"level":2,"title":"Server Example","slug":"server-example","link":"#server-example","children":[{"level":3,"title":"Bind a socket to multiple interfaces and any available port","slug":"bind-a-socket-to-multiple-interfaces-and-any-available-port","link":"#bind-a-socket-to-multiple-interfaces-and-any-available-port","children":[]},{"level":3,"title":"Static File Server","slug":"static-file-server","link":"#static-file-server","children":[]},{"level":3,"title":"Logging","slug":"logging","link":"#logging","children":[]},{"level":3,"title":"Error handler","slug":"error-handler","link":"#error-handler","children":[]},{"level":3,"title":"'multipart/form-data' POST data","slug":"multipart-form-data-post-data","link":"#multipart-form-data-post-data","children":[]},{"level":3,"title":"Receive content with Content receiver","slug":"receive-content-with-content-receiver","link":"#receive-content-with-content-receiver","children":[]},{"level":3,"title":"Send content with Content provider","slug":"send-content-with-content-provider","link":"#send-content-with-content-provider","children":[]},{"level":3,"title":"Chunked transfer encoding","slug":"chunked-transfer-encoding","link":"#chunked-transfer-encoding","children":[]},{"level":3,"title":"'Expect: 100-continue' handler","slug":"expect-100-continue-handler","link":"#expect-100-continue-handler","children":[]},{"level":3,"title":"Keep-Alive connection","slug":"keep-alive-connection","link":"#keep-alive-connection","children":[]},{"level":3,"title":"Timeout","slug":"timeout","link":"#timeout","children":[]},{"level":3,"title":"Set maximum payload length for reading request body","slug":"set-maximum-payload-length-for-reading-request-body","link":"#set-maximum-payload-length-for-reading-request-body","children":[]},{"level":3,"title":"Server-Sent Events","slug":"server-sent-events","link":"#server-sent-events","children":[]},{"level":3,"title":"Default thread pool support","slug":"default-thread-pool-support","link":"#default-thread-pool-support","children":[]},{"level":3,"title":"Override the default thread pool with yours","slug":"override-the-default-thread-pool-with-yours","link":"#override-the-default-thread-pool-with-yours","children":[]}]},{"level":2,"title":"Client Example","slug":"client-example","link":"#client-example","children":[{"level":3,"title":"GET with HTTP headers","slug":"get-with-http-headers","link":"#get-with-http-headers","children":[]},{"level":3,"title":"POST","slug":"post","link":"#post","children":[]},{"level":3,"title":"POST with parameters","slug":"post-with-parameters","link":"#post-with-parameters","children":[]},{"level":3,"title":"POST with Multipart Form Data","slug":"post-with-multipart-form-data","link":"#post-with-multipart-form-data","children":[]},{"level":3,"title":"PUT","slug":"put","link":"#put","children":[]},{"level":3,"title":"DELETE","slug":"delete","link":"#delete","children":[]},{"level":3,"title":"OPTIONS","slug":"options","link":"#options","children":[]},{"level":3,"title":"Timeout","slug":"timeout-1","link":"#timeout-1","children":[]},{"level":3,"title":"Receive content with Content receiver","slug":"receive-content-with-content-receiver-1","link":"#receive-content-with-content-receiver-1","children":[]},{"level":3,"title":"Send content with Content provider","slug":"send-content-with-content-provider-1","link":"#send-content-with-content-provider-1","children":[]},{"level":3,"title":"With Progress Callback","slug":"with-progress-callback","link":"#with-progress-callback","children":[]},{"level":3,"title":"Authentication","slug":"authentication","link":"#authentication","children":[]},{"level":3,"title":"Proxy server support","slug":"proxy-server-support","link":"#proxy-server-support","children":[]},{"level":3,"title":"Range","slug":"range","link":"#range","children":[]},{"level":3,"title":"Keep-Alive connection","slug":"keep-alive-connection-1","link":"#keep-alive-connection-1","children":[]},{"level":3,"title":"Redirect","slug":"redirect","link":"#redirect","children":[]},{"level":3,"title":"Use a specitic network interface","slug":"use-a-specitic-network-interface","link":"#use-a-specitic-network-interface","children":[]}]},{"level":2,"title":"OpenSSL Support","slug":"openssl-support","link":"#openssl-support","children":[]},{"level":2,"title":"Compression","slug":"compression","link":"#compression","children":[{"level":3,"title":"Zlib Support","slug":"zlib-support","link":"#zlib-support","children":[]},{"level":3,"title":"Brotli Support","slug":"brotli-support","link":"#brotli-support","children":[]},{"level":3,"title":"Compress request body on client","slug":"compress-request-body-on-client","link":"#compress-request-body-on-client","children":[]},{"level":3,"title":"Compress response body on client","slug":"compress-response-body-on-client","link":"#compress-response-body-on-client","children":[]}]},{"level":2,"title":"Split httplib.h into .h and .cc","slug":"split-httplib-h-into-h-and-cc","link":"#split-httplib-h-into-h-and-cc","children":[]},{"level":2,"title":"NOTE","slug":"note","link":"#note","children":[{"level":3,"title":"g++","slug":"g","link":"#g","children":[]},{"level":3,"title":"Windows","slug":"windows","link":"#windows","children":[]}]},{"level":2,"title":"License","slug":"license","link":"#license","children":[]},{"level":2,"title":"Special Thanks To","slug":"special-thanks-to","link":"#special-thanks-to","children":[]}],"relativePath":"system/httplib/README.md"}`),p={name:"system/httplib/README.md"},o=l(`<h1 id="cpp-httplib" tabindex="-1">cpp-httplib <a class="header-anchor" href="#cpp-httplib" aria-hidden="true">#</a></h1><p><a href="https://github.com/yhirose/cpp-httplib/actions" target="_blank" rel="noreferrer"><img src="https://github.com/yhirose/cpp-httplib/workflows/test/badge.svg" alt=""></a></p><p>A C++11 single-file header-only cross platform HTTP/HTTPS library.</p><p>It&#39;s extremely easy to setup. Just include <strong>httplib.h</strong> file in your code!</p><h2 id="server-example" tabindex="-1">Server Example <a class="header-anchor" href="#server-example" aria-hidden="true">#</a></h2><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">#include &lt;httplib.h&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">int main(void)</span></span>
<span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  using namespace httplib;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  Server svr;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  svr.Get(&quot;/hi&quot;, [](const Request&amp; req, Response&amp; res) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    res.set_content(&quot;Hello World!&quot;, &quot;text/plain&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">  });</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  svr.Get(R&quot;(/numbers/(\\d+))&quot;, [&amp;](const Request&amp; req, Response&amp; res) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    auto numbers = req.matches[1];</span></span>
<span class="line"><span style="color:#A6ACCD;">    res.set_content(numbers, &quot;text/plain&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">  });</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  svr.Get(&quot;/body-header-param&quot;, [](const Request&amp; req, Response&amp; res) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    if (req.has_header(&quot;Content-Length&quot;)) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      auto val = req.get_header_value(&quot;Content-Length&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    if (req.has_param(&quot;key&quot;)) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      auto val = req.get_param_value(&quot;key&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    res.set_content(req.body, &quot;text/plain&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">  });</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  svr.Get(&quot;/stop&quot;, [&amp;](const Request&amp; req, Response&amp; res) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    svr.stop();</span></span>
<span class="line"><span style="color:#A6ACCD;">  });</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  svr.listen(&quot;localhost&quot;, 1234);</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><code>Post</code>, <code>Put</code>, <code>Delete</code> and <code>Options</code> methods are also supported.</p><h3 id="bind-a-socket-to-multiple-interfaces-and-any-available-port" tabindex="-1">Bind a socket to multiple interfaces and any available port <a class="header-anchor" href="#bind-a-socket-to-multiple-interfaces-and-any-available-port" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> port </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind_to_any_port</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.0.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">listen_after_bind</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span></code></pre></div><h3 id="static-file-server" tabindex="-1">Static File Server <a class="header-anchor" href="#static-file-server" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Mount / to ./www directory</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> ret </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_mount_point</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./www</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#A6ACCD;">ret</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // The specified base directory doesn&#39;t exist...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Mount /public to ./www directory</span></span>
<span class="line"><span style="color:#A6ACCD;">ret </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_mount_point</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/public</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./www</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Mount /public to ./www1 and ./www2 directories</span></span>
<span class="line"><span style="color:#A6ACCD;">ret </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_mount_point</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/public</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./www1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 1st order to search</span></span>
<span class="line"><span style="color:#A6ACCD;">ret </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_mount_point</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/public</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./www2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 2nd order to search</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Remove mount /</span></span>
<span class="line"><span style="color:#A6ACCD;">ret </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove_mount_point</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Remove mount /public</span></span>
<span class="line"><span style="color:#A6ACCD;">ret </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove_mount_point</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/public</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// User defined file extension and MIME type mappings</span></span>
<span class="line"><span style="color:#A6ACCD;">svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_file_extension_and_mimetype_mapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/x-c</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_file_extension_and_mimetype_mapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cpp</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/x-c</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_file_extension_and_mimetype_mapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hh</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/x-h</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>The followings are built-in mappings:</p><table><thead><tr><th style="text-align:left;">Extension</th><th style="text-align:left;">MIME Type</th></tr></thead><tbody><tr><td style="text-align:left;">txt</td><td style="text-align:left;">text/plain</td></tr><tr><td style="text-align:left;">html, htm</td><td style="text-align:left;">text/html</td></tr><tr><td style="text-align:left;">css</td><td style="text-align:left;">text/css</td></tr><tr><td style="text-align:left;">jpeg, jpg</td><td style="text-align:left;">image/jpg</td></tr><tr><td style="text-align:left;">png</td><td style="text-align:left;">image/png</td></tr><tr><td style="text-align:left;">gif</td><td style="text-align:left;">image/gif</td></tr><tr><td style="text-align:left;">svg</td><td style="text-align:left;">image/svg+xml</td></tr><tr><td style="text-align:left;">ico</td><td style="text-align:left;">image/x-icon</td></tr><tr><td style="text-align:left;">json</td><td style="text-align:left;">application/json</td></tr><tr><td style="text-align:left;">pdf</td><td style="text-align:left;">application/pdf</td></tr><tr><td style="text-align:left;">js</td><td style="text-align:left;">application/javascript</td></tr><tr><td style="text-align:left;">wasm</td><td style="text-align:left;">application/wasm</td></tr><tr><td style="text-align:left;">xml</td><td style="text-align:left;">application/xml</td></tr><tr><td style="text-align:left;">xhtml</td><td style="text-align:left;">application/xhtml+xml</td></tr></tbody></table><p>NOTE: These the static file server methods are not thread safe.</p><h3 id="logging" tabindex="-1">Logging <a class="header-anchor" href="#logging" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_logger</span><span style="color:#89DDFF;">([](</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">auto&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">auto&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">your_logger</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> res</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="error-handler" tabindex="-1">Error handler <a class="header-anchor" href="#error-handler" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_error_handler</span><span style="color:#89DDFF;">([](</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">auto&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">auto&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> fmt </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;p&gt;Error Status: &lt;span style=&#39;color:red;&#39;&gt;%d&lt;/span&gt;&lt;/p&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> buf</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">BUFSIZ</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">snprintf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">buf</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#A6ACCD;">buf</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> fmt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">status</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_content</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">buf</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/html</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="multipart-form-data-post-data" tabindex="-1">&#39;multipart/form-data&#39; POST data <a class="header-anchor" href="#multipart-form-data-post-data" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Post</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/multipart</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[&amp;](</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">auto&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">auto&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> size </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> req</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">files</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> ret </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> req</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">has_file</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">auto</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> file </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> req</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_file_value</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // file.filename;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // file.content_type;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // file.content;</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="receive-content-with-content-receiver" tabindex="-1">Receive content with Content receiver <a class="header-anchor" href="#receive-content-with-content-receiver" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Post</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/content_receiver</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">[&amp;](</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Request</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Response</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ContentReader</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">content_reader</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">req</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">is_multipart_form_data</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      MultipartFormDataItems files</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">content_reader</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">[&amp;](</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MultipartFormData</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">file</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">files</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push_back</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">file</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">[&amp;](</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">char</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">data_length</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">files</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">back</span><span style="color:#89DDFF;">().</span><span style="color:#A6ACCD;">content</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> data_length</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string body</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">content_reader</span><span style="color:#89DDFF;">([&amp;](</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">char</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">data_length</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">body</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> data_length</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_content</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/plain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="send-content-with-content-provider" tabindex="-1">Send content with Content provider <a class="header-anchor" href="#send-content-with-content-provider" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> DATA_CHUNK_SIZE </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/stream</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[&amp;](</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Request</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Response</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">string</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">abcdefg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_content_provider</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    data</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">(),</span><span style="color:#676E95;font-style:italic;"> // Content length</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/plain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // Content type</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">](</span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">offset</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">length</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DataSink</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">sink</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">d </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      sink</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">d</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">offset</span><span style="color:#89DDFF;">],</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">min</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> DATA_CHUNK_SIZE</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true;</span><span style="color:#676E95;font-style:italic;"> // return &#39;false&#39; if you want to cancel the process.</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">delete</span><span style="color:#A6ACCD;"> data</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre></div><p>Without content length:</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/stream</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[&amp;](</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Request</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Response</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_content_provider</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/plain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // Content type</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">[&amp;](</span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">offset</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">length</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DataSink</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">sink</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#676E95;font-style:italic;">/* there is still data */</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">char</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> data</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // prepare data...</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">sink</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">(),</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">done</span><span style="color:#89DDFF;">();</span><span style="color:#676E95;font-style:italic;"> // No more data</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true;</span><span style="color:#676E95;font-style:italic;"> // return &#39;false&#39; if you want to cancel the process.</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="chunked-transfer-encoding" tabindex="-1">Chunked transfer encoding <a class="header-anchor" href="#chunked-transfer-encoding" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/chunked</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[&amp;](</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Request</span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Response</span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_chunked_content_provider</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">[](</span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">offset</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DataSink</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">sink</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      sink</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">123</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">      sink</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">345</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">      sink</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">789</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">      sink</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">done</span><span style="color:#89DDFF;">();</span><span style="color:#676E95;font-style:italic;"> // No more data</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true;</span><span style="color:#676E95;font-style:italic;"> // return &#39;false&#39; if you want to cancel the process.</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="expect-100-continue-handler" tabindex="-1">&#39;Expect: 100-continue&#39; handler <a class="header-anchor" href="#expect-100-continue-handler" aria-hidden="true">#</a></h3><p>As default, the server sends <code>100 Continue</code> response for <code>Expect: 100-continue</code> header.</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Send a &#39;417 Expectation Failed&#39; response.</span></span>
<span class="line"><span style="color:#A6ACCD;">svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_expect_100_continue_handler</span><span style="color:#89DDFF;">([](</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Request</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Response</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">417</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre></div><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Send a final status without reading the message body.</span></span>
<span class="line"><span style="color:#A6ACCD;">svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_expect_100_continue_handler</span><span style="color:#89DDFF;">([](</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Request</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Response</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">status </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">401</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="keep-alive-connection" tabindex="-1">Keep-Alive connection <a class="header-anchor" href="#keep-alive-connection" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">svr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_keep_alive_max_count</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // Default is 5</span></span>
<span class="line"></span></code></pre></div><h3 id="timeout" tabindex="-1">Timeout <a class="header-anchor" href="#timeout" aria-hidden="true">#</a></h3><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">svr.set_read_timeout(5, 0); // 5 seconds</span></span>
<span class="line"><span style="color:#A6ACCD;">svr.set_write_timeout(5, 0); // 5 seconds</span></span>
<span class="line"><span style="color:#A6ACCD;">svr.set_idle_interval(0, 100000); // 100 milliseconds</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="set-maximum-payload-length-for-reading-request-body" tabindex="-1">Set maximum payload length for reading request body <a class="header-anchor" href="#set-maximum-payload-length-for-reading-request-body" aria-hidden="true">#</a></h3><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">svr.set_payload_max_length(1024 * 1024 * 512); // 512MB</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="server-sent-events" tabindex="-1">Server-Sent Events <a class="header-anchor" href="#server-sent-events" aria-hidden="true">#</a></h3><p>Please see <a href="https://github.com/yhirose/cpp-httplib/blob/master/example/ssesvr.cc" target="_blank" rel="noreferrer">Server example</a> and <a href="https://github.com/yhirose/cpp-httplib/blob/master/example/ssecli.cc" target="_blank" rel="noreferrer">Client example</a>.</p><h3 id="default-thread-pool-support" tabindex="-1">Default thread pool support <a class="header-anchor" href="#default-thread-pool-support" aria-hidden="true">#</a></h3><p><code>ThreadPool</code> is used as a default task queue, and the default thread count is set to value from <code>std::thread::hardware_concurrency()</code>.</p><p>You can change the thread count by setting <code>CPPHTTPLIB_THREAD_POOL_COUNT</code>.</p><h3 id="override-the-default-thread-pool-with-yours" tabindex="-1">Override the default thread pool with yours <a class="header-anchor" href="#override-the-default-thread-pool-with-yours" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">YourThreadPoolTaskQueue</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">TaskQueue</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">YourThreadPoolTaskQueue</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">n</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool_</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start_with_thread_count</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">n</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">enqueue</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">function</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">void</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">fn</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">override</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool_</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">enqueue</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">fn</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">shutdown</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">override</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool_</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shutdown_gracefully</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  YourThreadPool pool_</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">svr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">new_task_queue </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">YourThreadPoolTaskQueue</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h2 id="client-example" tabindex="-1">Client Example <a class="header-anchor" href="#client-example" aria-hidden="true">#</a></h2><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">#include &lt;httplib.h&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">#include &lt;iostream&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">int main(void)</span></span>
<span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  httplib::Client cli(&quot;localhost&quot;, 1234);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  if (auto res = cli.Get(&quot;/hi&quot;)) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    if (res-&gt;status == 200) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      std::cout &lt;&lt; res-&gt;body &lt;&lt; std::endl;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">  } else {</span></span>
<span class="line"><span style="color:#A6ACCD;">    auto err = res.error();</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>NOTE: Constructor with scheme-host-port string is now supported!</p><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">httplib::Client cli(&quot;localhost&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">httplib::Client cli(&quot;localhost:8080&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">httplib::Client cli(&quot;http://localhost&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">httplib::Client cli(&quot;http://localhost:8080&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">httplib::Client cli(&quot;https://localhost&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="get-with-http-headers" tabindex="-1">GET with HTTP headers <a class="header-anchor" href="#get-with-http-headers" aria-hidden="true">#</a></h3><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">httplib::Headers headers = {</span></span>
<span class="line"><span style="color:#A6ACCD;">  { &quot;Accept-Encoding&quot;, &quot;gzip, deflate&quot; }</span></span>
<span class="line"><span style="color:#A6ACCD;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">auto res = cli.Get(&quot;/hi&quot;, headers);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>or</p><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cli.set_default_headers({</span></span>
<span class="line"><span style="color:#A6ACCD;">  { &quot;Accept-Encoding&quot;, &quot;gzip, deflate&quot; }</span></span>
<span class="line"><span style="color:#A6ACCD;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">auto res = cli.Get(&quot;/hi&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="post" tabindex="-1">POST <a class="header-anchor" href="#post" aria-hidden="true">#</a></h3><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">res = cli.Post(&quot;/post&quot;, &quot;text&quot;, &quot;text/plain&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">res = cli.Post(&quot;/person&quot;, &quot;name=john1&amp;note=coder&quot;, &quot;application/x-www-form-urlencoded&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="post-with-parameters" tabindex="-1">POST with parameters <a class="header-anchor" href="#post-with-parameters" aria-hidden="true">#</a></h3><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">httplib::Params params;</span></span>
<span class="line"><span style="color:#A6ACCD;">params.emplace(&quot;name&quot;, &quot;john&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">params.emplace(&quot;note&quot;, &quot;coder&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">auto res = cli.Post(&quot;/post&quot;, params);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>or</p><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">httplib::Params params{</span></span>
<span class="line"><span style="color:#A6ACCD;">  { &quot;name&quot;, &quot;john&quot; },</span></span>
<span class="line"><span style="color:#A6ACCD;">  { &quot;note&quot;, &quot;coder&quot; }</span></span>
<span class="line"><span style="color:#A6ACCD;">};</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">auto res = cli.Post(&quot;/post&quot;, params);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="post-with-multipart-form-data" tabindex="-1">POST with Multipart Form Data <a class="header-anchor" href="#post-with-multipart-form-data" aria-hidden="true">#</a></h3><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">httplib::MultipartFormDataItems items = {</span></span>
<span class="line"><span style="color:#A6ACCD;">  { &quot;text1&quot;, &quot;text default&quot;, &quot;&quot;, &quot;&quot; },</span></span>
<span class="line"><span style="color:#A6ACCD;">  { &quot;text2&quot;, &quot;aωb&quot;, &quot;&quot;, &quot;&quot; },</span></span>
<span class="line"><span style="color:#A6ACCD;">  { &quot;file1&quot;, &quot;h\\ne\\n\\nl\\nl\\no\\n&quot;, &quot;hello.txt&quot;, &quot;text/plain&quot; },</span></span>
<span class="line"><span style="color:#A6ACCD;">  { &quot;file2&quot;, &quot;{\\n  \\&quot;world\\&quot;, true\\n}\\n&quot;, &quot;world.json&quot;, &quot;application/json&quot; },</span></span>
<span class="line"><span style="color:#A6ACCD;">  { &quot;file3&quot;, &quot;&quot;, &quot;&quot;, &quot;application/octet-stream&quot; },</span></span>
<span class="line"><span style="color:#A6ACCD;">};</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">auto res = cli.Post(&quot;/multipart&quot;, items);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="put" tabindex="-1">PUT <a class="header-anchor" href="#put" aria-hidden="true">#</a></h3><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">res = cli.Put(&quot;/resource/foo&quot;, &quot;text&quot;, &quot;text/plain&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="delete" tabindex="-1">DELETE <a class="header-anchor" href="#delete" aria-hidden="true">#</a></h3><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">res = cli.Delete(&quot;/resource/foo&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="options" tabindex="-1">OPTIONS <a class="header-anchor" href="#options" aria-hidden="true">#</a></h3><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">res = cli.Options(&quot;*&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">res = cli.Options(&quot;/resource/foo&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="timeout-1" tabindex="-1">Timeout <a class="header-anchor" href="#timeout-1" aria-hidden="true">#</a></h3><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cli.set_connection_timeout(0, 300000); // 300 milliseconds</span></span>
<span class="line"><span style="color:#A6ACCD;">cli.set_read_timeout(5, 0); // 5 seconds</span></span>
<span class="line"><span style="color:#A6ACCD;">cli.set_write_timeout(5, 0); // 5 seconds</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="receive-content-with-content-receiver-1" tabindex="-1">Receive content with Content receiver <a class="header-anchor" href="#receive-content-with-content-receiver-1" aria-hidden="true">#</a></h3><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">std::string body;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">auto res = cli.Get(&quot;/large-data&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [&amp;](const char *data, size_t data_length) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    body.append(data, data_length);</span></span>
<span class="line"><span style="color:#A6ACCD;">    return true;</span></span>
<span class="line"><span style="color:#A6ACCD;">  });</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">string body</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/stream</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Headers</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">[&amp;](</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Response</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">EXPECT_EQ</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">status</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true;</span><span style="color:#676E95;font-style:italic;"> // return &#39;false&#39; if you want to cancel the request.</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">[&amp;](</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">data_length</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    body</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> data_length</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true;</span><span style="color:#676E95;font-style:italic;"> // return &#39;false&#39; if you want to cancel the request.</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="send-content-with-content-provider-1" tabindex="-1">Send content with Content provider <a class="header-anchor" href="#send-content-with-content-provider-1" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">string body </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ...</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cli_</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Post</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/stream</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> body</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">[](</span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">offset</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">length</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DataSink</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">sink</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    sink</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">body</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> offset</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> length</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true;</span><span style="color:#676E95;font-style:italic;"> // return &#39;false&#39; if you want to cancel the request.</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/plain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="with-progress-callback" tabindex="-1">With Progress Callback <a class="header-anchor" href="#with-progress-callback" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">httplib</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Client</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">client</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">url</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">port</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// prints: 0 / 000 bytes =&gt; 50% complete</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[](</span><span style="color:#C792EA;">uint64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">uint64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">total</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%lld / %lld bytes =&gt; %d%% complete</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> total</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)(</span><span style="color:#A6ACCD;">len</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">total</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true;</span><span style="color:#676E95;font-style:italic;"> // return &#39;false&#39; if you want to cancel the request.</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p><img src="https://user-images.githubusercontent.com/236374/33138910-495c4ecc-cf86-11e7-8693-2fc6d09615c4.gif" alt="progress"></p><h3 id="authentication" tabindex="-1">Authentication <a class="header-anchor" href="#authentication" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Basic Authentication</span></span>
<span class="line"><span style="color:#A6ACCD;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_basic_auth</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pass</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Digest Authentication</span></span>
<span class="line"><span style="color:#A6ACCD;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_digest_auth</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pass</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Bearer Token Authentication</span></span>
<span class="line"><span style="color:#A6ACCD;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_bearer_token_auth</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">token</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>NOTE: OpenSSL is required for Digest Authentication.</p><h3 id="proxy-server-support" tabindex="-1">Proxy server support <a class="header-anchor" href="#proxy-server-support" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_proxy</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">host</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> port</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Basic Authentication</span></span>
<span class="line"><span style="color:#A6ACCD;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_proxy_basic_auth</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pass</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Digest Authentication</span></span>
<span class="line"><span style="color:#A6ACCD;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_proxy_digest_auth</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pass</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Bearer Token Authentication</span></span>
<span class="line"><span style="color:#A6ACCD;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_proxy_bearer_token_auth</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pass</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>NOTE: OpenSSL is required for Digest Authentication.</p><h3 id="range" tabindex="-1">Range <a class="header-anchor" href="#range" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">httplib</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Client</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cli</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">httpbin.org</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/range/32</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">httplib</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">make_range_header</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">{{</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">}}</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;"> // &#39;Range: bytes=1-10&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// res-&gt;status should be 206.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// res-&gt;body should be &quot;bcdefghijk&quot;.</span></span>
<span class="line"></span></code></pre></div><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">httplib</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">make_range_header</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">{{</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">}</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> {</span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">}}</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;">      // &#39;Range: bytes=1-10, 20-&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">httplib</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">make_range_header</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">{{</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">199</span><span style="color:#A6ACCD;">}</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> {</span><span style="color:#F78C6C;">500</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">599</span><span style="color:#A6ACCD;">}}</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;"> // &#39;Range: bytes=100-199, 500-599&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">httplib</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">make_range_header</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">{{</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">}</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> {</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">}}</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;">        // &#39;Range: bytes=0-0, -1&#39;</span></span>
<span class="line"></span></code></pre></div><h3 id="keep-alive-connection-1" tabindex="-1">Keep-Alive connection <a class="header-anchor" href="#keep-alive-connection-1" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">httplib</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Client</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cli</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">localhost</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1234</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">         // with &quot;Connection: close&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_keep_alive</span><span style="color:#89DDFF;">(true);</span></span>
<span class="line"><span style="color:#A6ACCD;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_keep_alive</span><span style="color:#89DDFF;">(false);</span></span>
<span class="line"><span style="color:#A6ACCD;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/last-request</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // with &quot;Connection: close&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="redirect" tabindex="-1">Redirect <a class="header-anchor" href="#redirect" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">httplib</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Client</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cli</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yahoo.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">status</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 301</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_follow_location</span><span style="color:#89DDFF;">(true);</span></span>
<span class="line"><span style="color:#A6ACCD;">res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">status</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 200</span></span>
<span class="line"></span></code></pre></div><h3 id="use-a-specitic-network-interface" tabindex="-1">Use a specitic network interface <a class="header-anchor" href="#use-a-specitic-network-interface" aria-hidden="true">#</a></h3><p>NOTE: This feature is not available on Windows, yet.</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cli</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_interface</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eth0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // Interface name, IP address or host name</span></span>
<span class="line"></span></code></pre></div><h2 id="openssl-support" tabindex="-1">OpenSSL Support <a class="header-anchor" href="#openssl-support" aria-hidden="true">#</a></h2><p>SSL support is available with <code>CPPHTTPLIB_OPENSSL_SUPPORT</code>. <code>libssl</code> and <code>libcrypto</code> should be linked.</p><p>NOTE: cpp-httplib currently supports only version 1.1.1.</p><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">#define CPPHTTPLIB_OPENSSL_SUPPORT</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">SSLServer svr(&quot;./cert.pem&quot;, &quot;./key.pem&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">SSLClient cli(&quot;localhost&quot;, 8080);</span></span>
<span class="line"><span style="color:#A6ACCD;">cli.set_ca_cert_path(&quot;./ca-bundle.crt&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">cli.enable_server_certificate_verification(true);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="compression" tabindex="-1">Compression <a class="header-anchor" href="#compression" aria-hidden="true">#</a></h2><p>The server can applie compression to the following MIME type contents:</p><ul><li>all text types except text/event-stream</li><li>image/svg+xml</li><li>application/javascript</li><li>application/json</li><li>application/xml</li><li>application/xhtml+xml</li></ul><h3 id="zlib-support" tabindex="-1">Zlib Support <a class="header-anchor" href="#zlib-support" aria-hidden="true">#</a></h3><p>&#39;gzip&#39; compression is available with <code>CPPHTTPLIB_ZLIB_SUPPORT</code>. <code>libz</code> should be linked.</p><h3 id="brotli-support" tabindex="-1">Brotli Support <a class="header-anchor" href="#brotli-support" aria-hidden="true">#</a></h3><p>Brotli compression is available with <code>CPPHTTPLIB_BROTLI_SUPPORT</code>. Necessary libraries should be linked. Please see <a href="https://github.com/google/brotli" target="_blank" rel="noreferrer">https://github.com/google/brotli</a> for more detail.</p><h3 id="compress-request-body-on-client" tabindex="-1">Compress request body on client <a class="header-anchor" href="#compress-request-body-on-client" aria-hidden="true">#</a></h3><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cli.set_compress(true);</span></span>
<span class="line"><span style="color:#A6ACCD;">res = cli.Post(&quot;/resource/foo&quot;, &quot;...&quot;, &quot;text/plain&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="compress-response-body-on-client" tabindex="-1">Compress response body on client <a class="header-anchor" href="#compress-response-body-on-client" aria-hidden="true">#</a></h3><div class="language-c++"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cli.set_decompress(false);</span></span>
<span class="line"><span style="color:#A6ACCD;">res = cli.Get(&quot;/resource/foo&quot;, {{&quot;Accept-Encoding&quot;, &quot;gzip, deflate, br&quot;}});</span></span>
<span class="line"><span style="color:#A6ACCD;">res-&gt;body; // Compressed data</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="split-httplib-h-into-h-and-cc" tabindex="-1">Split httplib.h into .h and .cc <a class="header-anchor" href="#split-httplib-h-into-h-and-cc" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> python3 split.py</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> ls out</span></span>
<span class="line"><span style="color:#FFCB6B;">httplib.h</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">httplib.cc</span></span>
<span class="line"></span></code></pre></div><h2 id="note" tabindex="-1">NOTE <a class="header-anchor" href="#note" aria-hidden="true">#</a></h2><h3 id="g" tabindex="-1">g++ <a class="header-anchor" href="#g" aria-hidden="true">#</a></h3><p>g++ 4.8 and below cannot build this library since <code>&lt;regex&gt;</code> in the versions are <a href="https://stackoverflow.com/questions/12530406/is-gcc-4-8-or-earlier-buggy-about-regular-expressions" target="_blank" rel="noreferrer">broken</a>.</p><h3 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-hidden="true">#</a></h3><p>Include <code>httplib.h</code> before <code>Windows.h</code> or include <code>Windows.h</code> by defining <code>WIN32_LEAN_AND_MEAN</code> beforehand.</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">httplib.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">Windows.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">WIN32_LEAN_AND_MEAN</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">Windows.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">httplib.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>Note: Cygwin on Windows is not supported.</p><h2 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-hidden="true">#</a></h2><p>MIT license (© 2020 Yuji Hirose)</p><h2 id="special-thanks-to" tabindex="-1">Special Thanks To <a class="header-anchor" href="#special-thanks-to" aria-hidden="true">#</a></h2><p><a href="https://github.com/yhirose/cpp-httplib/graphs/contributors" target="_blank" rel="noreferrer">These folks</a> made great contributions to polish this library to totally another level from a simple toy!</p>`,123),e=[o];function t(c,r,i,y,D,F){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
