import{_ as e,c as a,o as s,a as n}from"./app.28778c7e.js";const C=JSON.parse('{"title":"Tagging new versions","description":"","frontmatter":{},"headers":[{"level":2,"title":"General","slug":"general","link":"#general","children":[]},{"level":2,"title":"Tagging new versions","slug":"tagging-new-versions-1","link":"#tagging-new-versions-1","children":[]},{"level":2,"title":"Taking a build gold:","slug":"taking-a-build-gold","link":"#taking-a-build-gold","children":[]},{"level":2,"title":"Creating a new rc for an existing point release:","slug":"creating-a-new-rc-for-an-existing-point-release","link":"#creating-a-new-rc-for-an-existing-point-release","children":[]},{"level":2,"title":"Create a new minor/major branch","slug":"create-a-new-minor-major-branch","link":"#create-a-new-minor-major-branch","children":[]}],"relativePath":"tools/tagging/README.md"}'),l={name:"tools/tagging/README.md"},t=n(`<h1 id="tagging-new-versions" tabindex="-1">Tagging new versions <a class="header-anchor" href="#tagging-new-versions" aria-hidden="true">#</a></h1><h2 id="general" tabindex="-1">General <a class="header-anchor" href="#general" aria-hidden="true">#</a></h2><p>The file tools/git/aliases.sh contains various git aliases which are useful when using git, and may be used by the merge scripts.</p><p>The file env.sh.example contains some example environment variable settings. Copy that locally to <a href="http://env.sh" target="_blank" rel="noreferrer">env.sh</a> and modify it to match your local setup.</p><p>Before running any of the other scripts, process the contents of that file as a source file</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">. env.sh</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>to initialize the common environment variables.</p><p>The following repositories should be checked out in a directory reserved for merging and tagging (default for scripts is ~/git):</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">git clone https://github.com/hpcc-systems/eclide.git</span></span>
<span class="line"><span style="color:#A6ACCD;">git clone https://github.com/hpcc-systems/HPCC-JAPIs.git</span></span>
<span class="line"><span style="color:#A6ACCD;">git clone https://github.com/hpcc-systems/Spark-HPCC.git</span></span>
<span class="line"><span style="color:#A6ACCD;">git clone https://github.com/hpcc-systems/LN.git ln</span></span>
<span class="line"><span style="color:#A6ACCD;">git clone https://github.com/hpcc-systems/HPCC-Platform.git hpcc</span></span>
<span class="line"><span style="color:#A6ACCD;">git clone https://github.com/hpcc-systems/helm-chart.git</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>The following are required for builds prior to 8.12.x</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">git clone https://github.com/hpcc-systems/nagios-monitoring.git</span></span>
<span class="line"><span style="color:#A6ACCD;">git clone https://github.com/hpcc-systems/ganglia-monitoring.git</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>The files git-fixversion and git-unupmerge can copied so they are on your default path, and then they will be available as git commands.</p><h2 id="tagging-new-versions-1" tabindex="-1">Tagging new versions <a class="header-anchor" href="#tagging-new-versions-1" aria-hidden="true">#</a></h2><p>The following process should be followed when tagging a new set of versions. This ensures that real merge conflicts are dealt with separately from merge conflicts of version numbers in the helm charts.</p><ol><li>Upmerge all changes between candidate branches for the different versions</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">./upmerge A.a.x candidate-A.b.x</span></span>
<span class="line"><span style="color:#A6ACCD;">./upmerge A.b.x candidate-A.c.x</span></span>
<span class="line"><span style="color:#A6ACCD;">./upmerge A.c.x master</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ol start="2"><li>Create new point release candidate branches:</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">./gorc.sh A.a.x</span></span>
<span class="line"><span style="color:#A6ACCD;">./gorc.sh A.b.x</span></span>
<span class="line"><span style="color:#A6ACCD;">./gorc.sh A.c.x</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ol start="3"><li>Upmerge again - this ensures any conflicts from version number changes are resolved independently of code changes</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">./upmerge A.a.x candidate-A.b.x</span></span>
<span class="line"><span style="color:#A6ACCD;">./upmerge A.b.x candidate-A.c.x</span></span>
<span class="line"><span style="color:#A6ACCD;">./upmerge A.c.x master</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="taking-a-build-gold" tabindex="-1">Taking a build gold: <a class="header-anchor" href="#taking-a-build-gold" aria-hidden="true">#</a></h2><p>Go gold with each of the explicit versions</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">./gogold.sh 7.8.76</span></span>
<span class="line"><span style="color:#A6ACCD;">./gogold.sh 7.10.50</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="creating-a-new-rc-for-an-existing-point-release" tabindex="-1">Creating a new rc for an existing point release: <a class="header-anchor" href="#creating-a-new-rc-for-an-existing-point-release" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">./gorc.sh A.a.&lt;n&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="create-a-new-minor-major-branch" tabindex="-1">Create a new minor/major branch <a class="header-anchor" href="#create-a-new-minor-major-branch" aria-hidden="true">#</a></h2><p>A new minor branch is created from the current master...</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">./gorcminor.sh 8.12.x</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,28),i=[t];function o(r,c,p,g,h,d){return s(),a("div",null,i)}const u=e(l,[["render",o]]);export{C as __pageData,u as default};
